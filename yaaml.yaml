Certainly! Below is a README.md version of the documentation:

---

# Application Config Documentation

## Overview

This document provides guidance on configuring the application using AppConfig stored in a ConfigMap and integrating it with HelmRelease's valuesFrom functionality. Additionally, it includes instructions on how to add the `appconfig.yml` to the kustomization.

## AppConfig Configuration

### ConfigMap Creation

1. Create a ConfigMap named `app-config` in your Kubernetes cluster. This ConfigMap will hold the AppConfig data.

    ```yaml
    kubectl create configmap app-config --from-file=appconfig.yml
    ```

    The `appconfig.yml` file should contain your AppConfig data. Example:

    ```yaml
    cronvalues:
      - cronschedule: "0 22 * * *"
        instances: "0"
      - cronschedule: "0 18 * * *"
        instances: "1"
      - cronschedule: "0 7 * * *"
        instances: "3"
    ```

2. Apply the ConfigMap to the Kubernetes cluster:

    ```bash
    kubectl apply -f app-config.yaml
    ```

### HelmRelease Configuration

1. In your Helm chart's `values.yaml` file, configure the HelmRelease to reference the AppConfig stored in the ConfigMap.

    ```yaml
    helmReleases:
      - name: my-application
        chart: my-application-chart
        version: 1.0.0
        valuesFrom:
          - secretKeyRef:
              name: app-config
              key: appconfig.yml
    ```

2. Ensure that your Helm chart's templates properly use the values from the AppConfig within the `my-application-chart/templates` directory.

## Kustomization Integration

To include the `appconfig.yml` in the kustomization, follow these steps:

1. Create a `kustomization.yaml` file in the root of your Kubernetes manifests directory (if not already created).

    ```yaml
    apiVersion: kustomize.config.k8s.io/v1beta1
    kind: Kustomization
    resources:
      - appconfig.yaml
    ```

2. Apply the kustomization to your Kubernetes cluster:

    ```bash
    kubectl apply -k .
    ```

## Conclusion

By following the steps outlined in this documentation, you can effectively manage your application's configuration using AppConfig stored in a ConfigMap, integrate it with HelmRelease's valuesFrom feature, and include it in the kustomization for streamlined deployment and configuration management.

---

Feel free to customize this documentation further to fit your specific application and deployment environment. Let me know if you need further assistance!
